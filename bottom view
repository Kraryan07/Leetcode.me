class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        vector<int>ans;
        if(root==NULL) return ans;
        map<int,int>mpp;
        queue<pair<Node*,int>>q;
        q.push({root,0});
         while(!q.empty()){
            auto it=q.front();
            q.pop();
            Node*node=it.first;
            int n=it.second;
            if(mpp.find(n)!=mpp.end()) mpp[n]=node->data;
            else{
                mpp[n]=node->data;
            }
            
            if(node->left!=NULL) {
                q.push({node->left,n-1});
            }
            if(node->right!=NULL){
                q.push({node->right,n+1});
            }
        }
        for(auto i:mpp){
            ans.push_back(i.second);
        }
        return ans;
    }
};
